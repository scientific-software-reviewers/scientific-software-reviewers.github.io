<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Exercises on</title><link>/docs/exercises/</link><description>Recent content in Exercises on</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs/exercises/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorial Exercises</title><link>/docs/exercises/ex_intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/exercises/ex_intro/</guid><description>There are three sets of exercises, all on GitHub. Follow the setup instructions to create your own tutorial repository to work on.
If you are not ready to setup a GitHub account and run workflows, a &amp;rsquo;take-a-look&amp;rsquo; repository with the exercise issues and pull requests is available at take-a-look. You can follow along with the tutorial and read the issues and pull requests without having to run your own GitHub actions.</description></item><item><title>Navigating the Exercises</title><link>/docs/exercises/navigating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/exercises/navigating/</guid><description>We&amp;rsquo;re going to navigate between issues and pull requests using the menu across the top of the repository. I&amp;rsquo;m using the take-a-look repository to demonstrate.
Click on issues to get to the list of issues.
The issues and pull requests are labelled with the language: text, python, Fortran.
Labels are a way to filter issues and pull requests. Typically on a repository you&amp;rsquo;ll see labels such as &amp;lsquo;Bug&amp;rsquo;, &amp;lsquo;Enhancement&amp;rsquo;, &amp;lsquo;Good First Issue&amp;rsquo;.</description></item><item><title>Examining Issues</title><link>/docs/exercises/examine-issues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/exercises/examine-issues/</guid><description>An issue is a way to discuss, plan and track work on a GitHub repository.
Issues can be bugs, complaints from users, requests for new features or added functionality.
When reading though an issue,
Are there multiple problems reported in the issue? Can you confirm the issue by reading the code or documentation? Do you need to run the code to confirm the issue? Can you reproduce the problem? Each tutorial exercise has an issue describing the problem.</description></item><item><title>Working with Pull requests</title><link>/docs/exercises/examine-pull/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/exercises/examine-pull/</guid><description>A pull request is a proposed change. A review is feedback on the change.
When you are reviewing, you&amp;rsquo;ll need to assess the scope and size of the pull request. This will give you some idea of how much work will be involved in the review, and what feedback you need to give.
Read the pull request description. Ideally this will give you the scope:
What&amp;rsquo;s changed. Why the changes were made.</description></item><item><title>TL;DR</title><link>/docs/exercises/tldr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/exercises/tldr/</guid><description>For each exercise:
The issue describes the problem. Read the code, does the issue describe the problem accurately? In each issue there are some questions to think about when looking at the code.
The pull request is a solution to the issue.
Review the pull request, does the pull request fix the issue?
Add comments about what is good, what is bad. Add suggestions for code changes. Would you accept the pull request as is?</description></item></channel></rss>